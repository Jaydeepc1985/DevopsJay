trigger:
  branches:
    include:
      - main

pool: jay
jobs:
- job: 'TerraformInitPlan'
  displayName: 'TerraformInitPlan job'
  pool: 'jay'
  steps:
  - task: TerraformInstaller@1
    inputs:
      terraformVersion: 'latest'

  - task: TerraformTask@5
    displayName: 'Terraform Init'
    inputs:
      provider: 'azurerm'
      command: 'init'
      workingDirectory: '$(System.DefaultWorkingDirectory)/kv_secure_access/Dev'
      backendServiceArm: 'jay'
      backendAzureRmResourceGroupName: 'jaydeep_rg'
      backendAzureRmStorageAccountName: 'jaydeepsa'
      backendAzureRmContainerName: 'tfstate'
      backendAzureRmKey: 'terraform.tfstate'

  - task: TerraformTask@5
    displayName: 'Terraform Plan'
    inputs:
      provider: 'azurerm'
      command: 'plan'
      workingDirectory: '$(System.DefaultWorkingDirectory)/kv_secure_access/Dev'
      benvironmentServiceNameAzureRM: 'jay'

  - task: TerraformTask@5
    displayName: 'Terraform Apply'
    inputs:
      provider: 'azurerm'
      command: 'apply'
      workingDirectory: '$(System.DefaultWorkingDirectory)/kv_secure_access/Dev'
      environmentServiceNameAzureRM: 'jay'
      args: '-auto-approve'

  - job: 'TerraformDestroy'
    displayName: 'Terraform Destroy Job'
    pool: 'jay'
    steps:
  - task: TerraformTask@5
    displayName: 'Terraform Destroy'
    inputs:
      provider: 'azurerm'
      command: 'destroy'
      workingDirectory: '$(System.DefaultWorkingDirectory)/kv_secure_access/Dev'
      environmentServiceNameAzureRM: 'jay'
      args: '-auto-approve'